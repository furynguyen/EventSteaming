version: '3.8'

services:
  # Using flink:latest image to create a flink instance.
  jobmanager:
    image: flink-app
    build: 
      context: .
    ports:
      - 8081:8081
      - 6123:6123
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      FLINK_PROPERTIES: "jobmanager.rpc.address: jobmanager"
    command:
      - jobmanager
  flink_task:
    image: flink-app
    build: 
      context: .
    environment:
      - OB_MANAGER_RPC_ADDRESS=jobmanager
      - |
          FLINK_PROPERTIES=
          jobmanager.rpc.address: jobmanager
          taskmanager.numberOfTaskSlots: 10
    command:
      - taskmanager
    depends_on:
      - jobmanager
  # Using confluentinc/cp-zookeeper:latest image to create a zookeeper instance.
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  # On testing purpose, using only one kafka broker. On production, it is recommended to use more than one broker.  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  # Using kafdrop to easier monitor the topic creation.
  kafdrop:
    image: obsidiandynamics/kafdrop
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    ports:
      - 9000:9000
    depends_on:
      - kafka

  # Using bitnami/postgresql:15 image to create a postgresql instance.
  # I build from a Dockerfile beacause I need to install  pg_partman and pg_cron extensions.
  pg:
    image: event-stream:15
    build:
      context: ./postgre
      dockerfile: ./Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432

  app:
    # /opt/flink/bin/flink run -py app2db.py --jobmanager jobmanager:8081
    image: flink-app
    build: 
      context: .
    environment: 
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: event-flink
      SINK_DIR: /sink
    depends_on:
      - kafka
    volumes:
      - ./:/test
      - ./jars:/opt/flink/otp
    entrypoint:
      - tail
    command: 
      - -f
      - /dev/null

  # job-submitter:
  #   # /opt/flink/bin/flink run -py app2db.py --jobmanager jobmanager:8081
  #   image: flink:latest
  #   command: >
  #     - -f
  #     - /dev/null
  #   volumes:
  #     - ./:/test
  #   entrypoint:
  #     - tail